--- ../atl.ml	2015-05-12 10:47:10.071324293 +0800
+++ atlweb.ml	2015-05-12 11:34:30.358160061 +0800
@@ -17,5 +17,12 @@
 end
-
-let bool2str b = if b then "Y" else "n"
-let printf= Printf.printf
+;;
+let print_string s = ()
+let print_endline s = ()
+let print_newline () = ()
+(*let caml_ml_output_char c = ()*)
+let print_char c = ();;
+
+let bool2str b = if b then "Y" else "n";;
+let output_buffer = Buffer.create 1000;;
+let printf fmt = Printf.bprintf output_buffer fmt;;
 
@@ -45,3 +52,3 @@
 
-let println_list_of_int li = printf "[%s]\n" (String.concat "; " (List.map string_of_int li))
+(*let println_list_of_int li = printf "[%s]\n" (String.concat "; " (List.map string_of_int li));;*)
 
@@ -134,5 +141,3 @@
 				then IntSet.add ( (int_of_char (x) - int_of_char('0')) ) (ag()) 
-				else (printf "Invalid Agent#  %c at position %d\n" x (!i);
-				 assert (false);
-				) in
+				else (printf "Invalid Agent#  %c at position %d\n" x (!i); assert (false)) in
 		let rec r()=
@@ -186,8 +191,4 @@
 
-let phi =
-	if Array.length Sys.argv > 1
-	then Formula.of_string Sys.argv.(1)
-	else Formula.of_string "({1}p&{1}~p)";;
-	(*else UNTIL (ATOM 'p', (AND (ATOM 'p', NOT (ATOM 'p')))) *)
-let use_weak = false;;
+let phi = Formula.of_string (Js.to_string (Dom_html.window##location##search))
+let use_weak = true;;
 
@@ -238,4 +239,4 @@
 
-    	printf "\n Size of closure %d \n" (cardinal closure );;
-	printf "CLOSURE: %s\n" (to_string closure)
+    	(*printf "\n Size of closure %d \n" (cardinal closure );;*)
+	printf "CLOSURE: %s\n" (to_string closure);;
 	
@@ -688,14 +689,13 @@
 
-if satisfied
-then print_string "RESULT: SATISFIABLE\n"
+let result = if satisfied
+then "RESULT: SATISFIABLE\n"
 else 
 	if (max_hues_in_colour < List.length Hue.all_hues) 
-	then (printf "Not satisfied, but large colours with more than %d (of %d) hues have been excluded\n" max_hues_in_colour (List.length Hue.all_hues);
-	     print_string "RESULT: UNKNOWN\n";)
+	then Printf.sprintf "Not satisfied, but large colours with more than %d (of %d) hues have been excluded\nRESULT: UNKNOWN\n" max_hues_in_colour (List.length Hue.all_hues) 
 	else  
 		if use_weak 
-		then (print_string "RESULT: UNsatisfiable\n")
-		else (print_string "Not satisfied, but weak vetos have been exluded\nRESULT: UNKNOWN\n");;
-	
+		then "RESULT: UNsatisfiable\n"
+		else "Not satisfied, but weak vetos have been exluded\nRESULT: UNKNOWN\n";;
 
-printf "Finished Processing %s\n" (Formula.to_string phi);
+(*Dom_html.window##alert (Js.string ("Alert window from ocaml" ^ (Js.to_string (Dom_html.window##location##search))));; *)
+Dom_html.window##alert (Js.string ( (Formula.to_string phi) ^ "\n" ^ result ));;
