
#processes ctl and anu bencmarks
#generates TeX tables in TeX/ctl
#RESULTS=~/i7e420anu2/results/

SOLVERS="ctl-rp anu-tr anu-bdd BSHADES BCTLNEW BCTLHUE mlsolver"
RESULTS=../results/
OUT=../results/ctl-tsv
[ -e $OUT  ] || mkdir $OUT

(
cd $RESULTS
for SOLVER in $SOLVERS
do T="$SOLVER"60; grep ID ../results/unify_CTL.log | sed s,.*:.,../work/out/, | while read f; do 
if grep -i  '\(valid\|satisfiable\)' $f.$T > /dev/null; then grep RUNTIME $f.$T; else echo 99;fi; done | sed s/RUNTIME:.// | 
    tee $T.runtime 
#sed s/\\..*// |
(echo $SOLVER; sort -n < $T.runtime) > $T.sort
done
paste `for SOLVER in $SOLVERS; do echo $SOLVER"60".sort; done` | tee ALL.sort

#echo "plot for [i=1:7] 'ALL.sort' u 0:i w lp title columnheader(i)" | gnuplot
echo "set term pdf mono; set key at graph 0.4,0.95 ; set logscale y; set yrange [0.01:60]; set output 'FairBCTL-Benchmark-ALL-logscale.pdf'; plot for [i=1:7] 'ALL.sort' u 0:i w lp title columnheader(i)  pointinterval 50 " | gnuplot; evince ALL.pdf &
)


normalize(){
sed '
s/\t$//
s/ $//
s/,BSHADES,/BSHADES${}_b$/g
s/,BCTLNEW,/BCTLNEW$_b$/g
s/,BCTLHUE,/BCTLHUE$_b$/g
s/:mlsolver_simple_fair:/mlsolver$_a$/g
s/://g
s/GOOD=//
s/BCTLNEW/ROOT/g
s/BSHADES/SHADE/g
s/BCTL//g
s/anu-//g
s/^_/?/g
'
}

output(){
INPUT="$1"
echo =========================================================================
echo SET: $INPUT
echo SOLVERS: $SOLVERS


for t in '' '+' '-'
do
echo -------------------------------------------------------------------------
echo TYPE: "[$t]"

ID="$INPUT,$t"
echo ID: $ID
(echo -ne ".\t$SOLVERS"
for GOOD in YN Y N _
do
echo 
echo -ne GOOD=$GOOD"\t"
for x in $SOLVERS
do
		echo -ne `< /tmp/$INPUT.log grep "[$GOOD]$x" | grep -F "||$t" | wc -l`"\t"
done
done
echo
) | normalize | tee $OUT/$ID.tsv | column -t

for GOOD in YN Y N 
#for GOOD in YN Y N _ "[:alnum:]_"
do
echo 
ID="$INPUT,$t,$GOOD"
echo ID: $ID
(echo -e ".\t$SOLVERS"
for x in $SOLVERS NULL
do
	echo -ne "$x\t" 
	for y in $SOLVERS
	do
		echo -ne `< /tmp/$INPUT.log sed 's/^/_NULL/' | grep "[$GOOD]$y" | grep "_$x" | grep -F "||$t" | wc -l`"\t"
	done
	echo
done) | normalize | tee $OUT/$ID.tsv | column -t
done

done
}

(
SOLVERS=":ctl-rp: :anu-tr: :anu-bdd: :BSHADES: :BCTLNEW: :BCTLHUE: :mlsolver: :BCTLOLD:"
perl unify_log2set.pl < $RESULTS/unify_CTL.log > /tmp/ubenchCTL.log
output ubenchCTL

SOLVERS=":mlsolver_simple_fair: ,BSHADES, ,BCTLNEW, ,BCTLHUE, :mlsolver: :BSHADES: :BCTLNEW: :BCTLHUE: :ctl-rp: :anu-tr: :anu-bdd:"
paste <(perl unify_log2set.pl < $RESULTS/anu_benchmark2.log|sed s/:/,/g) <(perl unify_log2set.pl < $RESULTS/anu_benchmark3.log) > /tmp/ubench23.log
output ubench23
) | tee $OUT/summary.txt

[ -e ../TeX/ctl ] || mkdir ../TeX/ctl 
( cd ../results/ctl-tsv/; for f in `ls | sed s/.tsv//` 
do ( < $f.tsv tr '\t ' '&'| tr -d '.' | sed 's/$/\\\\/
s/DONOT_/\\_/g
s/ROOT/TREE/
'"`for f in SHADE TREE HUE mlsolver SHADE ctl-rp tr bdd; do echo s/$f/'\\\\texttt{'$f'}'/; done`"; 
echo '%generated by unify_benchmarks/ctl_process_benchmarks.sh' ) > ../../TeX/ctl/$f.tex 
done)

echo zeros along diagonals means that mlsolver_simple_fair agrees with BCTL simple fair in all cases
echo NOTE: there ARE counterexamples to this, just not in this benchmark.
for a in Y N; do echo; for b in Y N; do echo -ne `< /tmp/ubench23.log grep "$a:mlsolver_simple_fair:" | grep "$b,B[[:alnum:]]*," | wc -l`"\t"; done; done

less $OUT/summary.txt


