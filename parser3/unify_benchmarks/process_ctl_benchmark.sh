
#processes ctl and anu bencmarks
#generates TeX tables in TeX/ctl
RESULTS=~/i7e420anu2/results/
OUT=../results/ctl-tsv
[ -e $OUT  ] || mkdir $OUT


normalize(){
sed '
s/\t$//
s/ $//
s/,BSHADES,/BSHADES-fair/g
s/,BCTLNEW,/BCTLNEW-fair/g
s/:mlsolver_simple_fair:/mlsolver-fair/g
s/://g
s/GOOD=//
s/BCTLNEW/ROOT/g
s/BSHADES/SHADE/g
s/BCTL//g
s/^_/?/g
'
}

output(){
INPUT="$1"
echo =========================================================================
echo SET: $INPUT
echo SOLVERS: $SOLVERS


for t in '' '+' '-'
do
echo -------------------------------------------------------------------------
echo TYPE: "[$t]"

ID="$INPUT,$t"
echo ID: $ID
(echo -ne ".\t$SOLVERS"
for GOOD in YN Y N _
do
echo 
echo -ne GOOD=$GOOD"\t"
for x in $SOLVERS
do
		echo -ne `< /tmp/$INPUT.log grep "[$GOOD]$x" | grep -F "$t" | wc -l`"\t"
done
done
echo
) | normalize | tee $OUT/$ID.tsv | column -t

for GOOD in YN Y N 
#for GOOD in YN Y N _ "[:alnum:]_"
do
echo 
ID="$INPUT,$t,$GOOD"
echo ID: $ID
(echo -e ".\t$SOLVERS"
for x in $SOLVERS NULL
do
	echo -ne "$x\t" 
	for y in $SOLVERS
	do
		echo -ne `< /tmp/$INPUT.log sed 's/^/_NULL/' | grep "[$GOOD]$y" | grep "_$x" | grep -F "$t" | wc -l`"\t"
	done
	echo
done) | normalize | tee $OUT/$ID.tsv | column -t
done

done
}

(
SOLVERS=":ctl-rp: :anu-tr: :anu-bdd: :BSHADES: :BCTLNEW: :BCTLHUE: :mlsolver:"
perl unify_log2set.pl < $RESULTS/unify_CTL.log > /tmp/ubenchCTL.log
output ubenchCTL

SOLVERS=":mlsolver_simple_fair: ,BSHADES, ,BCTLNEW, :mlsolver: :BSHADES: :BCTLNEW: :ctl-rp: :anu-tr: :anu-bdd:"
paste <(perl unify_log2set.pl < $RESULTS/anu_benchmark2.log|sed s/:/,/g) <(perl unify_log2set.pl < $RESULTS/anu_benchmark3.log) > /tmp/ubench23.log
output ubench23
) | tee $OUT/summary.txt

[ -e ../TeX/ctl ] || mkdir ../TeX/ctl 
( cd ../results/ctl-tsv/; for f in `ls | sed s/.tsv//` 
do ( < $f.tsv tr '\t ' '&'| tr -d '.' | sed 's/$/\\\\/
s/_/\\_/g'; echo '%generated by unify_benchmarks/ctl_process_benchmarks.sh' ) > ../../TeX/ctl/$f.tex 
done)

less $OUT/summary.txt
